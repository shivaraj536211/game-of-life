pipeline 
{
    environment {
    registry = "shivaraj536211/gameoflife-image"
    registryCredential = 'dockerhub'
     }
    agent any 
    tools { 
        maven 'maven' 
    }
stages { 
     
 stage('Preparation') { 
     steps {
// for display purposes

      // Get some code from a GitHub repository

      git 'https://github.com/shivaraj536211/game-of-life.git'

      // Get the Maven tool.
     
 // ** NOTE: This 'M3' Maven tool must be configured
 
     // **       in the global configuration.   
     }
   }

   stage('Build') {
       steps {
       // Run the maven build

      //if (isUnix()) {
         sh 'mvn -Dmaven.test.failure.ignore=true install'
      //} 
      //else {
      //   bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
       }
//}
   }
 
  stage('Unit Test Results') {
      steps {
      junit '**/target/surefire-reports/TEST-*.xml'
      
      }
 }
 stage('sonarqube') {
    environment {
        scannerHome = tool 'sonarqube'
    }
    steps {
        withSonarQubeEnv('sonarqube') {
            sh "${scannerHome}/bin/sonar-scanner"
        }
      
        }
    }
     stage('Artifact upload') {
      steps {
     nexusPublisher nexusInstanceId: '1234', nexusRepositoryId: 'releases', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: '/var/lib/jenkins/workspace/JOB-1/gameoflife-web/target/gameoflife.war']], mavenCoordinate: [artifactId: 'gameoflife1', groupId: 'com.wakaleo.gameoflife', packaging: 'war', version: '$BUILD_NUMBER']]]
      }
   }
  stage('Deploy War') {
      steps {
        //   sh label: '', script: 'ansible-playbook deploy.yml'
             deploy adapters: [tomcat8(credentialsId: 'ac388e7f-271a-403c-8f5d-d1d7e45d83be', path: '', url: 'http://3.6.252.169:8080')], contextPath: 'jujubi', war: '**/*.war'
            // deploy adapters: [tomcat8(credentialsId: 'ac388e7f-271a-403c-8f5d-d1d7e45d83be', path: 'JUJUBI', url: 'http://3.6.252.169:8080/')], contextPath: 'war', war: '**/*.war'
           }
    }
    stage('Build ') {
      steps {
       sh "docker build . -t shivaraj536211:$BUILD_NUMBER"
      }
   }
   stage('push to dockerhub')
           {
           steps{
           withCredentials([string(credentialsId: 'job1', variable: 'job1')]) {           
            sh "docker login -u shivaraj536211 -p ${job1}"
            sh "docker push shivaraj536211:${BUILD_NUMBER}"
            }
            }
           }
    stage('Update Image Version') {
      steps {
        sh label: '', script: '''sed -i s/latest/$BUILD_NUMBER/ deploy-kube.yml'''

      }
 }
  stage('Apply Kubernetes files   ') {
            steps {
             sh label: '', script: '''scp *.yml jenkins@13.234.20.156:/home/jenkins
                                  ssh jenkins@13.234.20.156 kubectl apply -f deploy-kube.yml
                                  ssh jenkins@13.234.20.156 kubectl apply -f service.yml'''
           
        }
     }
}
post {
        success {
            archiveArtifacts 'gameoflife-web/target/*.war'
        }
        failure {
            mail to:"shivarajkumar585@gmail.com", subject:"FAILURE: ${currentBuild.fullDisplayName}", body: "Build failed"
        }
    }       
}
